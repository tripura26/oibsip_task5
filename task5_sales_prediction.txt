# -*- coding: utf-8 -*-
"""oibsip_task5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1U-yLvjLZWe_qLKqvEB-NlcY8TKiHWoZV

**Importing the libraries**
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

"""**Importing the dataset**"""

dataset=pd.read_csv("/content/Advertising.csv")

"""**Describing Dataset**"""

dataset.head()

dataset.info()

dataset.describe()

"""**Analyzing Data By distplot**"""

sns.set_style("whitegrid")
plt.figure(figsize=(15, 10))
sns.distplot(dataset.Sales)
plt.show()

"""**Analyzing Data By heatmap**"""

plt.style.use('seaborn-whitegrid')
sns.heatmap(dataset.corr())
plt.show()

"""**Relation Between Sales and Newspaper**"""

plt.scatter(dataset['Sales'],dataset['Newspaper'])
plt.xlabel('Sales')
plt.ylabel('Newspaper')

"""**Relation Between Sales and Radio**"""

plt.scatter(dataset['Sales'],dataset['Radio'])
plt.xlabel('Sales')
plt.ylabel('Radio')

"""**Relation Between Sales and TV**"""

plt.scatter(dataset['Sales'],dataset['TV'])
plt.xlabel('Sales')
plt.ylabel('TV')

X = dataset.iloc[:, 1:-1].values
y = dataset.iloc[:, -1].values

"""**Splitting the dataset into the Training set and Test set**"""

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)

"""**Training the Multiple Linear Regression model on the Training set**"""

from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(X_train, y_train)

"""**Predicting the Test set results**"""

y_pred = regressor.predict(X_test)
y_pred

sale = regressor.predict([[44.5,39.3,45.1]])
print(sale)

"""**Accuracy**"""

print("Score",regressor.score(X_test, y_test))

"""**Analyzing actual and predicted data using scatter plot**"""

plt.scatter(y_test,y_pred);
plt.xlabel('Actual');
plt.ylabel('Predicted');

"""**Analyzing actual and predicted data using regplot**"""

sns.regplot(x=y_test,y=y_pred,ci=None,color ='green')